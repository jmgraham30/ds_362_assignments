---
title: "DS 362 Modeling Case Study 2"
format: 
  html:
    theme: pulse
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(tidymodels)

theme_set(theme_minimal(base_size=13))

tidymodels_prefer()
```

For your amusement: Where do hamburgers like to dance? At a meatball! 

## Assignment Overview and Instructions

The goal of this modeling case study is for you to get hands-on experience in going through the steps of a machine learning problem from beginning to end with provided data. The case studies in this assignment will focus on hyperparameter tuning, fitting and comparing multiple models, and unsupervised methods that have been covered in class so far or are similar to those we have covered in class so far. 

For this assignment, you should create and work in an RStudio project named `case_study_2_lastname` where you will replace the `lastname` part with your last name. You should create either an appropriately names Quarto notebook or an appropriately names R script to save all you code in. Finally, you should maintain your project as a GitHub repository.


### Hyperparameter Tuning and Model Comparison Case Study

In this part of the assignment, you are asked to model a data set on sightings of [unidentified flying objects](https://en.wikipedia.org/wiki/Unidentified_flying_object) (UFOs). This data is modified from a [TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master) data set available through [this repository](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/readme.md) but originates from [the National UFO Reporting Center](https://nuforc.org/ndx/?id=shape).

![A UFO, figure from [The New Yorker](https://www.newyorker.com/culture/photo-booth/the-enticing-mysteries-of-ufo-photography)](https://media.newyorker.com/photos/64ca89f569af7f8649142d29/1:1/w_1010,h_1010,c_limit/Wiley-UFO-03.jpg){width=25% fig-align="center"}

To read in the data, run the following code:

```{r}
#| message: false
ufo_df <- read_csv("https://raw.githubusercontent.com/jmgraham30/modeling_case_study_2_data/main/ufo_df.csv")
```

Now, we can see what is contained in our data set:

```{r}
glimpse(ufo_df)
```

The data set contains the following variables:

- Response variable: `shape` - the shape of the UFO. This is a binary categorical variable that records whether the object for which the sighting was reported had a fixed geometric shape or some kind of amorphous dynamic shape.

- Predictor variables: 

    - `duration_seconds` - the duration of the sighting in seconds.
    
    - `day_part` - whether the reported sighting occurred in the morning, afternoon, or night. 
    
    - `latitude` - the latitude of the sighting.
    
    - `longitude` - the longitude of the sighting.
    
    - `population` - the population of the city in which the reported sighting occurred. 
    
    - `elevation_m` - the elevation in meters for the city in which the reported sighting occurred. 
    
In modeling this data, you are asked to follow the approach of the blog post [Evaluate multiple modeling approaches for spam email](https://juliasilge.com/blog/spam-email/). In particular, you should use a workflow set to evaluate multiple possible models.  Further, your modeling should also involve the tuning of hyperparameters of your models.
    
#### Part A: EDA

Provide some exploratory plots for the data. Make sure to specifically create some visualizations to show the relationship between the response variable and the predictor variables. 


#### Part B: Model Fitting and Comparison
    
Choose at least three different types models to fit to the data[^1]. At least one of these types of models should be different from the ones used in the blog post [Evaluate multiple modeling approaches for spam email](https://juliasilge.com/blog/spam-email/). Also, choose at least one type of model that has hyperparameters that need to be tuned. You should have at least one plot each that shows the results of your hyperparameter tuning and model comparisons.

[^1]: Recall that the documentation for the various model specifications available through the `parsnip` package can be found [here](https://parsnip.tidymodels.org/reference/index.html).


#### Part C: Model Interpretation and Results

Train and evaluate your final model. Make sure to interpret your model and results in the context of the data. Your work should include at least one plot that shows the performance of your final model. 


### Unsupervised Learning Case Study

In this part of the assignment, you are asked to apply unsupervised learning methods to a data set about [Starbucks](https://www.starbucks.com/) beverages.


This data set comes from a [TidyTuesday repository](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-12-21/readme.md) that contains an Official Starbucks Nutritional dataset.

![](https://user-images.githubusercontent.com/55933131/146823691-4c19c28c-d2ef-46b5-82bc-76923f5c3256.png){width=25% fig-align="center"}

You can load the data by running the following command:

```{r}
#| message: false
#| warning: false


starbucks_df <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv') %>%
  mutate(trans_fat_g = as.numeric(trans_fat_g),
         fiber_g = as.numeric(fiber_g)) %>%
  select(-c(product_name,size,milk,whip,serv_size_m_l))

```


Now, we can see what is contained in our data set:

```{r}
glimpse(starbucks_df)
```

The data set contains a number of numerical variables:

- `calories` - the number of calories in the beverage, and

- several measurements on the nutritional content of the beverage. 

We will focus on two tasks:

1. Dimension reduction for the nutritional content of the beverages.

2. Clustering the beverages based on their nutritional content.


#### Part A: Dimension Reduction

Use PCA to reduce the dimension of the nutritional content of the beverages. What is the proportion of variance explained by each of the principal components? Plot the loadings as we've done in class. Make sure to interpret your results. Include a plot of the first two principal components adding the calories variable as a color aesthetic.

#### Part B: Clustering

Use both $k$-means clustering and hierarchical clustering to cluster the beverages based on their nutritional content. For $k$-means clustering, compare $k = 2$, $k=3$, $k=5$, and $k=10$. Make sure to interpret your results. For hierarchical clustering, plot the dendrogram. 


